#!/usr/bin/perl

use warnings;
use strict;
use BadTraffic 1.3.2;
use Getopt::Long;

my $VERBOSE = 0;
my $DB_HOST = 'localhost';
my $DB_USER = 'autoblocker';
my $DB_PASS = undef;
my $DB_NAME = 'badtraffic_db';

my $result  = undef;

my @category = @ARGV;


&Getopt::Long::Configure( 'pass_through', 'no_autoabbrev' );
&Getopt::Long::GetOptions(
    'verbose|v:+'  => \$VERBOSE,
    'dbname=s'     => \$DB_NAME,
    'dbuser=s'     => \$DB_USER,
    'dbpass=s'     => \$DB_PASS,
    'dbhost=s'     => \$DB_HOST,
);

my $bt = BadTraffic->new(
    DB_PASS => $DB_PASS,
    DB_HOST => $DB_HOST,
    DB_USER => $DB_USER, # default: "autoblocker"
    DB_NAME => $DB_NAME, # default: "badtraffic_db",
    VERBOSE => $VERBOSE
);

$bt->db_block_expire();
$bt->check_iptables_setup();

my $db_cidr = Net::CIDR::Lite->new();
my $fw_cidr = $bt->get_fw_blocks();
my $wl_cidr = $bt->get_whitelist();

unless (@category){
  push(@category, "all");
}

foreach my $cat (@category){
  if ($cat eq "all"){
    $cat = "";
  }
  my $tmp_cidr = $bt->get_db_blocks($cat);
  $db_cidr->add_cidr($tmp_cidr);
}

foreach my $cat (@category){
  if ($cat eq "none"){
    $db_cidr = undef; 
    $db_cidr = Net::CIDR::Lite->new();
  }
}


##
# Remove anything from the fw_cidr from the db_cidr
# object.  This makes for a large db_cidr object.
##
$db_cidr = $bt->cidr_subtract($db_cidr, $wl_cidr);
$db_cidr->clean();

my @db_list = $db_cidr->list;
my @wl_list = $wl_cidr->list;
my @fw_list = $fw_cidr->list;
my %db_hash = map {$_ => '1'} @db_list;


##
# Look through the current fw_list and unblock entries in wl_list
# and unblock entries no longer in db_hash
##
foreach my $e ( @fw_list ) {
   foreach my $e2 ( @wl_list ){
     if ($bt->cidr_contains($e2, $e)) { $bt->fw_unblock($e) }
   }
	unless ( $db_hash{$e} ){ $bt->fw_unblock($e) }

}

##
# Refresh firewall blocks and build %fw_hash
##
$fw_cidr = $bt->get_fw_blocks();
@fw_list = $fw_cidr->list;
my %fw_hash = map {$_ => '1'} @fw_list;


##
# Block anything in the db_list that's not in the fw_hash
##
foreach my $e ( @db_list ) {
	unless ($fw_hash{$e}){
	  $bt->fw_block($e);
	}
}

